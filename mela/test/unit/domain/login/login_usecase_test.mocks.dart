// Mocks generated by Mockito 5.4.4 from annotations
// in mela/test/unit/domain/login/login_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mela/domain/entity/user/token_model.dart' as _i4;
import 'package:mela/domain/repository/user_login/user_login_repository.dart'
    as _i2;
import 'package:mela/domain/usecase/user_login/login_usecase.dart' as _i5;
import 'package:mela/domain/usecase/user_login/login_with_google_usecase.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserLoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLoginRepository extends _i1.Mock
    implements _i2.UserLoginRepository {
  MockUserLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isLoggedIn),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i4.TokenModel?> login(_i5.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue: _i3.Future<_i4.TokenModel?>.value(),
      ) as _i3.Future<_i4.TokenModel?>);

  @override
  _i3.Future<_i4.TokenModel?> loginWithGoogle(
          _i6.LoginWithGoogleParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithGoogle,
          [params],
        ),
        returnValue: _i3.Future<_i4.TokenModel?>.value(),
      ) as _i3.Future<_i4.TokenModel?>);

  @override
  _i3.Future<void> saveIsLoggedIn(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #saveIsLoggedIn,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveAccessToken(String? accessToken) => (super.noSuchMethod(
        Invocation.method(
          #saveAccessToken,
          [accessToken],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveRefreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveRefreshToken,
          [refreshToken],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> refreshAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #refreshAccessToken,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #refreshAccessToken,
            [],
          ),
        )),
      ) as _i3.Future<String>);
}
