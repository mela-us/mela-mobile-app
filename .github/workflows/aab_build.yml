  name: Android App Bundle
  on:
    push:
      branches:
        - fe-release
    pull_request:
      branches:
        - fe-release
  jobs:
    build_aab:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout source
          uses: actions/checkout@v3

        - name: Setup flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.27.4' # You can specify the Flutter version to use
            channel: 'stable' # You can specify the Flutter channel to use

        - name: Install dependencies
          run: flutter pub get
          working-directory: frontend/mela

        #Decode secret
        - name: Decode keystore from secret
          run: |
            echo "${{ secrets.KEYSTORE_SECRET }}" | base64 -d > frontend/mela/android/upload-keystore.jks

        - name: Check sign in config #
          run: |
            echo "storeFile=$GITHUB_WORKSPACE/frontend/mela/android/upload-keystore.jks" >> $GITHUB_ENV
            echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

        - name: Build AAB
          run: flutter build appbundle --release --no-tree-shake-icons
          working-directory: frontend/mela

        - name: Upload AAB Artifact
          uses: actions/upload-artifact@v4
          with:
            name: app-release.aab
            path: frontend/mela/build/app/outputs/bundle/release/app-release.aab


          
    push_ggdrive:
      runs-on: ubuntu-latest
      needs: build_aab
      steps:

        - name: Checkout source
          uses: actions/checkout@v3
        
        - name: Download .aab artifact
          uses: actions/download-artifact@v4
          with:
            name: app-release.aab
            path: frontend/mela/build/app/outputs/bundle/release

        - name: Decode gcp_credential
          run: |
            echo "${{ secrets.GCP_CREDENTIAL }}" | base64 -d > frontend/mela/gcp_cred.json
            echo "CRED_LINK=$GITHUB_WORKSPACE/frontend/mela/gcp_cred.json" >> $GITHUB_ENV

        - name: Parsing version
          id: version
          run: |
            VERSION=$(grep '^version' frontend/mela/pubspec.yaml | cut -d ' ' -f 2)
            echo "Parsed, releasing version: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV 
        #ADDED TO GITHUB_ENV FOR LATER CALL

        - name: Install python dependencies
          run: |
            python -m pip install --upgrade pi
            pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib

        - name: Push AAB to drive
          env:
            CREDENTIAL_LINK: ${{ env.CRED_LINK }}
            ROOT_FOLDER_ID: ${{ secrets.ROOT_FOLDER_ID }}
            FOLDER_NAME:  "Release ${{ env.VERSION }}"
          run: python upload_drive.py

